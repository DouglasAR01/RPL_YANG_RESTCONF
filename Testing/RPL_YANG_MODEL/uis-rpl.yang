module uis-rpl {

  yang-version "1.1";

  // namespace
  namespace "urn:ietf:params:xml:ns:yang:uis-rpl";

  prefix "rpl";

  // import some basic types
  import ietf-routing {
    prefix "rt";
  }

  import ietf-yang-types {
    prefix "yang";
  }

  import ietf-interfaces {
    prefix "if";
  }

  import ietf-ip {
    prefix "ip";
  }


  // meta
  organization "Universidad Industrial de Santander";

  contact
    "Douglas Andrés Ramírez
    ra.douglas@hotmail.com";

  description
    "This module is an a first approach to a fully RPL YANG model";

  revision 2020-02-27 {
    description
      "Objective functions support.";
  }
  revision 2019-10-15 {
    description
      "Initial revision.";
  }

  // feature statements

  // identity statements
  identity rpl {
    base rt:routing-protocol;
    description "Identity for the RPL routing protocol.";
  }

  // typedef statements
  // #Aquí van todos los tipos de datos adicionales que necesite



  // grouping statements

  grouping route-attributes {
    description
      "Grouping for route attributes.";

  }

  grouping trickle-timer {
    container trickle {
      description
        "Trickle timer variables and parameters.";

      // PARAMETERS
      leaf i-min {
        description
          "The minimum interval size, Imin, is defined in milliseconds (ms).";
        type uint32 {
          range 1..max;
        }
        mandatory true;
      }

      leaf i-max {
        description
          "The maximum interval size, Imax, is described as a number of
          doublings of the minimum interval size (the base-2 log(max/min)).";
        type uint8 {
          range 1..max;
        }
        mandatory true;
      }

      leaf k {
        description
          "The redundancy constant, k, is a natural number (an integer
            greater than zero).";
        type uint8 {
          range 1..max;
        }
        mandatory true;
      }

      //VARIABLES
      leaf i {
        description
          "I, the current interval size.";
        config false;
        type uint32;
      }

      leaf t {
        description
          "t, a time within the current interval.";
        config false;
        type uint32;
      }

      leaf c {
        description
          "c, a counter.";
        config false;
        type yang:counter32;
      }
    }
  }

  // data definition statements

  // augment statements
  augment "/rt:routing/rt:control-plane-protocols/"
    + "rt:control-plane-protocol"{

      when "derived-from(rt:type, rpl:rpl)"{
        description
          "This augment is only valid for a routing protocol instance
          of RPL.";
      }

      description "RPL augmentation.";
      container rpl {
        description "RPL data.";
        // Aquí va todo el contenido del protocolo

        //Contenedor de interfaces
        container interfaces {
          description "Containing a list of RPL interfaces.";
          list interface {
            key "interface";
            description "List of RPL interfaces.";
            leaf interface {
              type if:interface-ref;
              description "Enable RPL on this interface.";
              // El must verifica que la interfaz a enlistar sea de una instancia RPL
              // Y que el protocolo IP sea la versión 6
              must "(derived-from-or-self("
                + "../../../../rt:type, 'rpl:rpl') and "
                + "/if:interfaces/if:interface[if:name=current()]/"
                + "ip:ipv6)" {
                error-message "Invalid interface type.";
                description
                  "RPL can only be enabled on IPv6 interfaces.";
              }
            }




            /**
            *
            * STATE DATA
            *
            **/

            leaf oper-status {
              type enumeration {
                enum up {
                  description
                    "RPL is operational on this interface.";
                }
                enum down {
                  description
                    "RPL is not operational on this
                     interface.";
                }
              }
              config false;
              description
                "Operational state.";
            }

            container statistics {
              // Estadísticas que almacena cada interfaz que corra RPL
            }
          } //Fin lista interfaces
        } //Fin contenedor interfaces


        // Contenedor de direccionamiento
        container ipv6 {
          config false;
          description
           "IPv6 address family information";

          //Posibles groupings de tabla de rutas, vecinos y padres elegidos
        }
      } //Fin contenedor de RPL
    }

  // rpc statements
  // #Aquí va todo lo relacionado a restconf


  // notification statements

}
